"use strict";var a=require("expo-sqlite");const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),r=Promise,o=clearInterval,c=a=>null==a,l=(a,t,e)=>c(a)?e?.():t(a),y=a=>t(a)==i,u=a=>Array.isArray(a),w=(a,t,e)=>a.slice(t,e),d=a=>a.length,v=async a=>r.all(a),p=a=>{throw Error(a)},E=(a,t)=>a.forEach(t),g=(a,t="")=>a.join(t),A=(a,t)=>a.map(t),m=a=>0==d(a),h=(a,t)=>a.filter(t),N=(a,...t)=>a.push(...t),$=a=>a.shift(),S="_",f="_id",C="SELECT",O="WHERE",T="TABLE",b="ALTER "+T,L="DELETE FROM",I=C+"*FROM",D="pragma_",R="data_version",M="schema_version",_="pragma_table_",P=a=>`"${a.replace(/"/g,'""')}"`,F=(a,t=[1])=>g(A(a,(()=>"$"+t[0]++)),s),x=(a,t)=>a?.has(t)??!1,U=a=>c(a)||0==(a=>a?.size??0)(a),j=a=>[...a?.values()??[]],q=(a,t)=>a?.forEach(t),B=(a,t)=>a?.delete(t),J=Object,Y=a=>J.getPrototypeOf(a),k=J.entries,z=J.keys,G=J.freeze,H=(a=[])=>J.fromEntries(a),K=(...a)=>J.assign({},...a),Q=(a,t)=>(delete a[t],a),V=(a,t)=>A(k(a),(([a,e])=>t(e,a))),W=(a,t)=>H(V(a,((a,e)=>[e,t(a,e)]))),X=a=>J.values(a),Z=a=>d(z(a)),aa=a=>(a=>!c(a)&&l(Y(a),(a=>a==J.prototype||c(Y(a))),(()=>!0)))(a)&&0==Z(a),ta=JSON.stringify,ea=JSON.parse,na=a=>new Map(a),sa=(a,t)=>a?.get(t),ia=(a,t)=>A([...a?.entries()??[]],(([a,e])=>t(e,a))),ra=(a,t,e)=>c(e)?(B(a,t),a):a?.set(t,e),oa=(a,t,e,n)=>(x(a,t)?n?.(sa(a,t)):ra(a,t,e()),sa(a,t)),ca=(a,t,e,n,s=0)=>l((e?oa:sa)(a,t[s],s>d(t)-2?e:na),(i=>{if(s>d(t)-2)return n?.(i)&&ra(a,t[s]),i;const r=ca(i,t,e,n,s+1);return U(i)&&ra(a,t[s]),r})),la=a=>new Set(u(a)||c(a)?a:[a]),ya=(a,t)=>a?.add(t),ua=/^\d+$/,wa=na(),da=na(),va=(a,t,e,s,i,r,o,y={},w=0,v=[])=>{let g,A,m,h=0,S=0,f=0;oa(wa,v,(()=>0)),oa(da,v,(()=>[]));const C=na(),[O,T,b,L,I]=((a=1,t,e)=>1!=a&&t.isMergeable()?[1,t.getMergeableContent,()=>t.getTransactionMergeableChanges(!e),([[a],[t]])=>!aa(a)||!aa(t),t.setDefaultContent]:2!=a?[0,t.getContent,t.getTransactionChanges,([a,t])=>!aa(a)||!aa(t),t.setContent]:p("Store type not supported by this Persister"))(o,a,w),[D,R,M]=(()=>{let a;const[t,e]=(()=>{const a=[];let t=0;return[e=>(e?$(a):null)??n+t++,t=>{ua.test(t)&&d(a)<1e3&&N(a,t)}]})(),s=na();return[(e,i,r,o=[],c=()=>[])=>{a??=k;const l=t(1);return ra(s,l,[e,i,r,o,c]),ya(ca(i,r??[n],la),l),l},(t,e,...i)=>E(((a,t=[n])=>{const e=[],s=(a,n)=>n==d(t)?N(e,a):null===t[n]?q(a,(a=>s(a,n+1))):E([t[n],null],(t=>s(sa(a,t),n+1)));return s(a,0),e})(t,e),(t=>q(t,(t=>sa(s,t)[0](a,...e??[],...i))))),a=>l(sa(s,a),(([,t,i])=>(ca(t,i??[n],void 0,(t=>(B(t,a),U(t)?1:0))),ra(s,a),e(a),i))),t=>l(sa(s,t),(([t,,e=[],n,s])=>{const i=(...r)=>{const o=d(r);o==d(e)?t(a,...r,...s(r)):c(e[o])?E(n[o]?.(...r)??[],(a=>i(...r,a))):i(...r,e[o])};i()}))]})(),_=a=>{a!=h&&(h=a,R(C,void 0,h))},P=t=>{(O&&u(t?.[0])?1===t?.[2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},F=async a=>(2!=h&&(_(1),S++,await Y((async()=>{try{const e=await t();u(e)?P(e):a?I(a):p("Content is not an array: "+e)}catch(t){r?.(t),a&&I(a)}_(0)}))),k),x=()=>(A&&(i(A),A=void 0),k),j=async a=>(1!=h&&(_(2),f++,await Y((async()=>{try{await e(T,a)}catch(a){r?.(a)}_(0)}))),k),J=()=>(m&&(a.delListener(m),m=void 0),k),Y=async(...a)=>(N(sa(da,v),...a),await(async()=>{if(!sa(wa,v)){for(ra(wa,v,1);!c(g=$(sa(da,v)));)try{await g()}catch(a){r?.(a)}ra(wa,v,0)}})(),k),k={load:F,startAutoLoad:async a=>{x(),await F(a);try{A=await s((async(a,t)=>{t||a?2!=h&&(_(1),S++,P(t??a),_(0)):await F()}))}catch(a){r?.(a)}return k},stopAutoLoad:x,isAutoLoading:()=>!c(A),save:j,startAutoSave:async()=>(J(),await j(),m=a.addDidFinishTransactionListener((()=>{const a=b();L(a)&&j(a)})),k),stopAutoSave:J,isAutoSaving:()=>!c(m),getStatus:()=>h,addStatusListener:a=>D(a,C),delListener:t=>(M(t),a),schedule:Y,getStore:()=>a,destroy:()=>(sa(da,v).splice(0,void 0),x().stopAutoSave()),getStats:()=>({loads:S,saves:f}),...y};return G(k)},pa=(a,t,e,n,i,r=Ea,o,l)=>{const y=na();return[async()=>{y.clear(),A(await e(a,t),(({tn:a,cn:t})=>ya(oa(y,a,la),t)))},async(t,e)=>((a,t)=>x(sa(y,a),t))(t,e)?H(h(A(await a(I+P(t)),(a=>[a[e],l?W(Q(a,e),l):Q(a,e)])),(([a,t])=>!c(a)&&!aa(t)))):{},async(t,e,n,l,u,w=!1)=>{const d=la();W(n??{},(a=>A(z(a??{}),(a=>ya(d,a)))));const p=j(d);if(!w&&u&&m(p)&&x(y,t))return await a("DROP "+T+P(t)),void ra(y,t);const E=sa(y,t),$=la(j(E));if(m(p)||(x(y,t)?await v(A([e,...p],(async(n,s)=>{B($,n)||(await a(b+P(t)+"ADD"+P(n)+i),0==s&&await a("CREATE UNIQUE INDEX pk ON "+P(t)+`(${P(e)})`),ya(E,n))}))):(await a("CREATE "+T+P(t)+`(${P(e)}${i} PRIMARY KEY${g(A(p,(a=>s+P(a)+i)))});`),ra(y,t,la([e,...p])))),await v([...!w&&l?A(j($),(async n=>{n!=e&&(await a(b+P(t)+"DROP"+P(n)),B(E,n))})):[]]),w)c(n)?await a(L+P(t)+O+" true"):await v(V(n,(async(n,s)=>{c(n)?await a(L+P(t)+O+P(e)+"=$1",[s]):m(p)||await r(a,t,e,z(n),{[s]:o?A(X(n),o):X(n)},E)})));else if(m(p))x(y,t)&&await a(L+P(t)+O+" true");else{const s=h(j(sa(y,t)),(a=>a!=e)),i={},c=[];W(n??{},((a,t)=>{i[t]=A(s,(t=>o?o(a?.[t]):a?.[t])),N(c,t)})),await r(a,t,e,s,i),await a(L+P(t)+O+P(e)+`NOT IN(${F(c)})`,c)}},async t=>{let e;await a("BEGIN");try{e=await t()}catch(a){n?.(a)}return await a("END"),e}]},Ea=async(a,t,e,n,i)=>{const r=[1];await a("INSERT INTO"+P(t)+"("+((...a)=>g(A(a,P),s))(e,...n)+")VALUES"+g(V(i,(a=>"($"+r[0]+++","+F(a,r)+")")),s)+"ON CONFLICT("+P(e)+")DO UPDATE SET"+g(A(n,(a=>P(a)+"=excluded."+P(a))),s),V(i,((a,t)=>[t,...A(a,(a=>a??null))])).flat())},ga=(a,t,e,n,s,i,r,[o,c,l],y,u,w,d,v,p)=>{const[E,g,A,m]=pa(t,y,u,s,v,p),h=va(a,(async()=>await m((async()=>{return await E(),a=(await g(o,c))[S]?.[l]??"null",ea(a,((a,t)=>"ï¿¼"===t?void 0:t));var a}))),(async a=>await m((async()=>{var t;await E(),await A(o,c,{[S]:{[l]:(t=a()??null,ta(t,((a,t)=>void 0===t?"ï¿¼":t)))}},!0,!0)}))),e,n,s,r,{[d]:()=>w,destroy:()=>(h.stopAutoLoad().stopAutoSave(),i(),h)},0,w);return h},Aa=(a,t,e,n,s,i,r,[o,l,[y,u,w]],d,p,E,g,A,m,N,$)=>{const[C,O,T,b]=pa(t,d,p,s,A,m,N,$),L=async(a,t)=>await v(ia(l,(async([e,n,s,i],r)=>{t&&!(r in a)||await T(e,n,a[r],s,i,t)}))),I=async(a,t)=>u?await T(w,f,{[S]:a},!0,!0,t):null,D=va(a,(async()=>await b((async()=>{await C();const a=await(async()=>H(h(await v(ia(o,(async([a,t],e)=>[a,await O(e,t)]))),(a=>!aa(a[1])))))(),t=await(async()=>y?(await O(w,f))[S]:{})();return aa(a)&&c(t)?void 0:[a,t]}))),(async(a,t)=>await b((async()=>{if(await C(),c(t)){const[t,e]=a();await L(t),await I(e)}else await L(t[0],!0),await I(t[1],!0)}))),e,n,s,r,{[g]:()=>E,destroy:()=>(D.stopAutoLoad().stopAutoSave(),i(),D)},0,E);return D},ma="ColumnName",ha="store",Na="json",$a=ha+"TableName",Sa=ha+"Id"+ma,fa=ha+ma,Ca="autoLoadIntervalSeconds",Oa="rowId"+ma,Ta="tableId",ba="tableName",La="deleteEmptyColumns",Ia="deleteEmptyTable",Da={mode:Na,[Ca]:1},Ra={load:0,save:0,[ba]:e+"_values"},Ma=(a,t,e,n,s)=>{const i=na();return W(a,((a,r)=>{const o=w(X(K(t,y(a)?{[e]:a}:a)),0,Z(t));c(o[0])||n(r,o[0])||(s(r,o[0]),ra(i,r,o))})),i},_a=(a,t,s,i,r,c,l,u,d,v,p="getDb",E)=>{let g,A,m;const h=((a,t)=>t?async(e,n)=>(t(e,n),await a(e,n)):a)(s,c),[N,$,S,T]=(a=>{const t=(a=>K(Da,y(a)?{[$a]:a}:a??{}))(a),n=t[Ca];if(t.mode==Na){const a=t[$a]??e;return[1,n,[a,t[Sa]??f,t[fa]??ha],la(a)]}const{tables:{load:s={},save:i={}}={},values:r={}}=t,o=w(X(K(Ra,r)),0,Z(Ra)),c=o[2],l=la(c),u=la(c);return[0,n,[Ma(s,{[Ta]:null,[Oa]:f},Ta,(a=>x(u,a)),(a=>ya(l,a))),Ma(i,{[ba]:null,[Oa]:f,[La]:0,[Ia]:0},ba,((a,t)=>x(u,t)),((a,t)=>ya(l,t))),o],l]})(t);return(N?ga:Aa)(a,h,(a=>{let t;const e=()=>t=setInterval((async()=>{try{const[{d:t,s:e,c:n}]=await h(`${C} ${R} d,${M} s,TOTAL_CHANGES() c FROM ${D}${R} JOIN ${D}${M}`);t==g&&e==A&&n==m||(null!=g&&a(),g=t,A=e,m=n)}catch{}}),1e3*$),n=()=>{g=A=m=null,o(t)},s=i((t=>{T.has(t)&&(n(),a(),e())}));return e(),()=>{n(),r(s)}}),(a=>a()),l,u,d,S,j(T),(async(a,t)=>await a(`${C} t.name tn,c.name cn FROM ${_}list()t,${_}info(t.name)c ${O} t.schema='main'AND t.type IN('table','view')AND t.name IN(${F(t)})ORDER BY t.name,c.name`,t)),v,p,n,E,(a=>!0===a?1:!1===a?0:a),void 0)};exports.createExpoSqlitePersister=(t,e,n,s,i)=>_a(t,n,(async(a,t=[])=>await e.getAllAsync(a,t)),(t=>a.addDatabaseChangeListener((({tableName:a})=>t(a)))),(a=>a.remove()),s,i,(()=>0),3,e);
