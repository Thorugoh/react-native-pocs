"use strict";const t=t=>typeof t,a="tinybase",e=",",n=t(""),s=Promise,i=t=>null==t,r=(t,a,e)=>i(t)?e?.():a(t),o=a=>t(a)==n,c=t=>Array.isArray(t),E=(t,a,e)=>t.slice(a,e),l=t=>t.length,w=async t=>s.all(t),y=t=>{throw Error(t)},u=(t,a)=>t.forEach(a),d=(t,a="")=>t.join(a),T=(t,a)=>t.map(a),R=t=>0==l(t),A=(t,a)=>t.filter(a),N=(t,...a)=>t.push(...a),g=t=>t.shift(),p="_",C="_id",O="SELECT",L="WHERE",v="TABLE",$="ALTER "+v,S="DELETE FROM",I=O+"*FROM",m=t=>`"${t.replace(/"/g,'""')}"`,_=(t,a=[1])=>d(T(t,(()=>"$"+a[0]++)),e),h=(t,a)=>t?.has(a)??!1,f=t=>i(t)||0==(t=>t?.size??0)(t),b=t=>[...t?.values()??[]],P=(t,a)=>t?.forEach(a),D=(t,a)=>t?.delete(a),U=Object,F=t=>U.getPrototypeOf(t),M=U.entries,G=U.keys,B=U.freeze,j=(t=[])=>U.fromEntries(t),x=(...t)=>U.assign({},...t),X=(t,a)=>(delete t[a],t),Y=(t,a)=>T(M(t),(([t,e])=>a(e,t))),q=(t,a)=>j(Y(t,((t,e)=>[e,a(t,e)]))),H=t=>U.values(t),W=t=>l(G(t)),k=t=>(t=>!i(t)&&r(F(t),(t=>t==U.prototype||i(F(t))),(()=>!0)))(t)&&0==W(t),z=JSON.stringify,J=JSON.parse,K=t=>new Map(t),V=(t,a)=>t?.get(a),Q=(t,a)=>T([...t?.entries()??[]],(([t,e])=>a(e,t))),Z=(t,a,e)=>i(e)?(D(t,a),t):t?.set(a,e),tt=(t,a,e,n)=>(h(t,a)?n?.(V(t,a)):Z(t,a,e()),V(t,a)),at=(t,a,e,n,s=0)=>r((e?tt:V)(t,a[s],s>l(a)-2?e:K),(i=>{if(s>l(a)-2)return n?.(i)&&Z(t,a[s]),i;const r=at(i,a,e,n,s+1);return f(i)&&Z(t,a[s]),r})),et=t=>new Set(c(t)||i(t)?t:[t]),nt=(t,a)=>t?.add(a),st=/^\d+$/,it=K(),rt=K(),ot=(t,a,e,n,s,o,E,w={},d=0,T=[])=>{let R,A,p,C=0,O=0,L=0;tt(it,T,(()=>0)),tt(rt,T,(()=>[]));const v=K(),[$,S,I,m,_]=((t=1,a,e)=>1!=t&&a.isMergeable()?[1,a.getMergeableContent,()=>a.getTransactionMergeableChanges(!e),([[t],[a]])=>!k(t)||!k(a),a.setDefaultContent]:2!=t?[0,a.getContent,a.getTransactionChanges,([t,a])=>!k(t)||!k(a),a.setContent]:y("Store type not supported by this Persister"))(E,t,d),[h,b,U]=(()=>{let t;const[a,e]=(()=>{const t=[];let a=0;return[e=>(e?g(t):null)??""+a++,a=>{st.test(a)&&l(t)<1e3&&N(t,a)}]})(),n=K();return[(e,s,i,r=[],o=()=>[])=>{t??=q;const c=a(1);return Z(n,c,[e,s,i,r,o]),nt(at(s,i??[""],et),c),c},(a,e,...s)=>u(((t,a=[""])=>{const e=[],n=(t,s)=>s==l(a)?N(e,t):null===a[s]?P(t,(t=>n(t,s+1))):u([a[s],null],(a=>n(V(t,a),s+1)));return n(t,0),e})(a,e),(a=>P(a,(a=>V(n,a)[0](t,...e??[],...s))))),t=>r(V(n,t),(([,a,s])=>(at(a,s??[""],void 0,(a=>(D(a,t),f(a)?1:0))),Z(n,t),e(t),s))),a=>r(V(n,a),(([a,,e=[],n,s])=>{const r=(...o)=>{const c=l(o);c==l(e)?a(t,...o,...s(o)):i(e[c])?u(n[c]?.(...o)??[],(t=>r(...o,t))):r(...o,e[c])};r()}))]})(),F=t=>{t!=C&&(C=t,b(v,void 0,C))},M=a=>{($&&c(a?.[0])?1===a?.[2]?t.applyMergeableChanges:t.setMergeableContent:1===a?.[2]?t.applyChanges:t.setContent)(a)},G=async t=>(2!=C&&(F(1),O++,await Y((async()=>{try{const e=await a();c(e)?M(e):t?_(t):y("Content is not an array: "+e)}catch(a){o?.(a),t&&_(t)}F(0)}))),q),j=()=>(A&&(s(A),A=void 0),q),x=async t=>(1!=C&&(F(2),L++,await Y((async()=>{try{await e(S,t)}catch(t){o?.(t)}F(0)}))),q),X=()=>(p&&(t.delListener(p),p=void 0),q),Y=async(...t)=>(N(V(rt,T),...t),await(async()=>{if(!V(it,T)){for(Z(it,T,1);!i(R=g(V(rt,T)));)try{await R()}catch(t){o?.(t)}Z(it,T,0)}})(),q),q={load:G,startAutoLoad:async t=>{j(),await G(t);try{A=await n((async(t,a)=>{a||t?2!=C&&(F(1),O++,M(a??t),F(0)):await G()}))}catch(t){o?.(t)}return q},stopAutoLoad:j,isAutoLoading:()=>!i(A),save:x,startAutoSave:async()=>(X(),await x(),p=t.addDidFinishTransactionListener((()=>{const t=I();m(t)&&x(t)})),q),stopAutoSave:X,isAutoSaving:()=>!i(p),getStatus:()=>C,addStatusListener:t=>h(t,v),delListener:a=>(U(a),t),schedule:Y,getStore:()=>t,destroy:()=>(V(rt,T).splice(0,void 0),j().stopAutoSave()),getStats:()=>({loads:O,saves:L}),...w};return B(q)},ct=(t,a,n,s,r,o=Et,c,E)=>{const l=K();return[async()=>{l.clear(),T(await n(t,a),(({tn:t,cn:a})=>nt(tt(l,t,et),a)))},async(a,e)=>((t,a)=>h(V(l,t),a))(a,e)?j(A(T(await t(I+m(a)),(t=>[t[e],E?q(X(t,e),E):X(t,e)])),(([t,a])=>!i(t)&&!k(a)))):{},async(a,n,s,E,y,u=!1)=>{const g=et();q(s??{},(t=>T(G(t??{}),(t=>nt(g,t)))));const p=b(g);if(!u&&y&&R(p)&&h(l,a))return await t("DROP "+v+m(a)),void Z(l,a);const C=V(l,a),O=et(b(C));if(R(p)||(h(l,a)?await w(T([n,...p],(async(e,s)=>{D(O,e)||(await t($+m(a)+"ADD"+m(e)+r),0==s&&await t("CREATE UNIQUE INDEX pk ON "+m(a)+`(${m(n)})`),nt(C,e))}))):(await t("CREATE "+v+m(a)+`(${m(n)}${r} PRIMARY KEY${d(T(p,(t=>e+m(t)+r)))});`),Z(l,a,et([n,...p])))),await w([...!u&&E?T(b(O),(async e=>{e!=n&&(await t($+m(a)+"DROP"+m(e)),D(C,e))})):[]]),u)i(s)?await t(S+m(a)+L+" true"):await w(Y(s,(async(e,s)=>{i(e)?await t(S+m(a)+L+m(n)+"=$1",[s]):R(p)||await o(t,a,n,G(e),{[s]:c?T(H(e),c):H(e)},C)})));else if(R(p))h(l,a)&&await t(S+m(a)+L+" true");else{const e=A(b(V(l,a)),(t=>t!=n)),i={},r=[];q(s??{},((t,a)=>{i[a]=T(e,(a=>c?c(t?.[a]):t?.[a])),N(r,a)})),await o(t,a,n,e,i),await t(S+m(a)+L+m(n)+`NOT IN(${_(r)})`,r)}},async a=>{let e;await t("BEGIN");try{e=await a()}catch(t){s?.(t)}return await t("END"),e}]},Et=async(t,a,n,s,i)=>{const r=[1];await t("INSERT INTO"+m(a)+"("+((...t)=>d(T(t,m),e))(n,...s)+")VALUES"+d(Y(i,(t=>"($"+r[0]+++","+_(t,r)+")")),e)+"ON CONFLICT("+m(n)+")DO UPDATE SET"+d(T(s,(t=>m(t)+"=excluded."+m(t))),e),Y(i,((t,a)=>[a,...T(t,(t=>t??null))])).flat())},lt=(t,a,e,n,s,i,r,[o,c,E],l,w,y,u,d,T)=>{const[R,A,N,g]=ct(a,l,w,s,d,T),C=ot(t,(async()=>await g((async()=>{return await R(),t=(await A(o,c))[p]?.[E]??"null",J(t,((t,a)=>"ï¿¼"===a?void 0:a));var t}))),(async t=>await g((async()=>{var a;await R(),await N(o,c,{[p]:{[E]:(a=t()??null,z(a,((t,a)=>void 0===a?"ï¿¼":a)))}},!0,!0)}))),e,n,s,r,{[u]:()=>y,destroy:()=>(C.stopAutoLoad().stopAutoSave(),i(),C)},0,y);return C},wt=(t,a,e,n,s,r,o,[c,E,[l,y,u]],d,T,R,N,g,O,L,v)=>{const[$,S,I,m]=ct(a,d,T,s,g,O,L,v),_=async(t,a)=>await w(Q(E,(async([e,n,s,i],r)=>{a&&!(r in t)||await I(e,n,t[r],s,i,a)}))),h=async(t,a)=>y?await I(u,C,{[p]:t},!0,!0,a):null,f=ot(t,(async()=>await m((async()=>{await $();const t=await(async()=>j(A(await w(Q(c,(async([t,a],e)=>[t,await S(e,a)]))),(t=>!k(t[1])))))(),a=await(async()=>l?(await S(u,C))[p]:{})();return k(t)&&i(a)?void 0:[t,a]}))),(async(t,a)=>await m((async()=>{if(await $(),i(a)){const[a,e]=t();await _(a),await h(e)}else await _(a[0],!0),await h(a[1],!0)}))),e,n,s,o,{[N]:()=>R,destroy:()=>(f.stopAutoLoad().stopAutoSave(),r(),f)},0,R);return f},yt="ColumnName",ut="store",dt="json",Tt=ut+"TableName",Rt=ut+"Id"+yt,At=ut+yt,Nt="autoLoadIntervalSeconds",gt="rowId"+yt,pt="tableId",Ct="tableName",Ot="deleteEmptyColumns",Lt="deleteEmptyTable",vt={mode:dt,[Nt]:1},$t={load:0,save:0,[Ct]:a+"_values"},St=(t,a,e,n,s)=>{const r=K();return q(t,((t,c)=>{const l=E(H(x(a,o(t)?{[e]:t}:t)),0,W(a));i(l[0])||n(c,l[0])||(s(c,l[0]),Z(r,c,l))})),r},It=a,mt=/^([cd]:)(.+)/,_t=a+"_data",ht=a+"_table";exports.createPostgresPersister=async(t,e,n,s,i)=>{const c=await(e.reserve?.());return((t,e,n,s,i,c,l,y,u,d,R="getDb")=>{const A=((t,a)=>a?async(e,n)=>(a(e,n),await t(e,n)):t)(n,c),[N,,g,p]=(t=>{const e=(t=>x(vt,o(t)?{[Tt]:t}:t??{}))(t),n=e[Nt];if(e.mode==dt){const t=e[Tt]??a;return[1,n,[t,e[Rt]??C,e[At]??ut],et(t)]}const{tables:{load:s={},save:i={}}={},values:r={}}=e,c=E(H(x($t,r)),0,W($t)),l=c[2],w=et(l),y=et(l);return[0,n,[St(s,{[pt]:null,[gt]:C},pt,(t=>h(y,t)),(t=>nt(w,t))),St(i,{[Ct]:null,[gt]:C,[Ot]:0,[Lt]:0},Ct,((t,a)=>h(y,a)),((t,a)=>nt(w,a))),c],w]})(e),v=async t=>{await A(`CREATE OR REPLACE TRIGGER ${m(_t+"_"+t)} AFTER INSERT OR UPDATE OR DELETE ON ${m(t)} EXECUTE FUNCTION ${_t}()`)};return(N?lt:wt)(t,A,(async t=>{await A(`CREATE OR REPLACE FUNCTION ${ht}()RETURNS event_trigger AS $t2$ DECLARE row record; BEGIN FOR row IN SELECT object_identity FROM pg_event_trigger_ddl_commands()WHERE command_tag='CREATE TABLE' LOOP PERFORM pg_notify('${It}','c:'||SPLIT_PART(row.object_identity,'.',2));END LOOP;END;$t2$ LANGUAGE plpgsql;`);try{await A(`CREATE EVENT TRIGGER ${ht} ON ddl_command_end WHEN TAG IN('CREATE TABLE')EXECUTE FUNCTION ${ht}();`)}catch{}return await A(`CREATE OR REPLACE FUNCTION ${_t}()RETURNS trigger AS $t1$ BEGIN PERFORM pg_notify('${It}','d:'||TG_TABLE_NAME);RETURN NULL;END;$t1$ LANGUAGE plpgsql;`),await w(T(b(p),(async t=>{await A(`CREATE TABLE IF NOT EXISTS ${m(t)}("_id"text PRIMARY KEY)`),await v(t)}))),await s(It,(async a=>{return await r((e=a,n=mt,e?.match(n)),(async([,a,e])=>{h(p,e)&&("c:"==a&&await v(e),t())}));var e,n}))}),i,l,y,u,g,b(p),(async(t,a)=>await t(`${O} table_name tn,column_name cn FROM information_schema.columns ${L} table_schema='public'AND table_name IN(${_(a)})`,a)),d,R,"text",void 0,(t=>z(t)),(t=>J(t)))})(t,n,c?.unsafe,(async(t,a)=>e.listen(t,a)),(async t=>{try{await t.unlisten()}catch(t){i?.(t)}}),s,i,(()=>c?.release?.()),3,e,"getSql")};
