const a=a=>typeof a,t="tinybase",e="",n=",",s=a(e),i=Promise,o=clearInterval,r=a=>null==a,c=(a,t,e)=>r(a)?e?.():t(a),l=t=>a(t)==s,w=a=>Array.isArray(a),y=(a,t,e)=>a.slice(t,e),u=a=>a.length,d=async a=>i.all(a),p=a=>{throw Error(a)},v=(a,t)=>a.forEach(t),E=(a,t="")=>a.join(t),g=(a,t)=>a.map(t),A=a=>0==u(a),h=(a,t)=>a.filter(t),m=(a,...t)=>a.push(...t),N=a=>a.shift(),$="_",f="_id",O="SELECT",S="WHERE",C="TABLE",T="ALTER "+C,I="DELETE FROM",L=O+"*FROM",b="pragma_",D="data_version",R="schema_version",M="pragma_table_",_=a=>`"${a.replace(/"/g,'""')}"`,P=(a,t=[1])=>E(g(a,(()=>"$"+t[0]++)),n),F=(a,t)=>a?.has(t)??!1,U=a=>r(a)||0==(a=>a?.size??0)(a),j=a=>[...a?.values()??[]],x=(a,t)=>a?.forEach(t),B=(a,t)=>a?.delete(t),J=Object,Y=a=>J.getPrototypeOf(a),k=J.entries,z=J.keys,G=J.freeze,H=(a=[])=>J.fromEntries(a),K=(...a)=>J.assign({},...a),Q=(a,t)=>(delete a[t],a),V=(a,t)=>g(k(a),(([a,e])=>t(e,a))),W=(a,t)=>H(V(a,((a,e)=>[e,t(a,e)]))),X=a=>J.values(a),q=a=>u(z(a)),Z=a=>(a=>!r(a)&&c(Y(a),(a=>a==J.prototype||r(Y(a))),(()=>!0)))(a)&&0==q(a),aa=JSON.stringify,ta=JSON.parse,ea=a=>new Map(a),na=(a,t)=>a?.get(t),sa=(a,t)=>g([...a?.entries()??[]],(([a,e])=>t(e,a))),ia=(a,t,e)=>r(e)?(B(a,t),a):a?.set(t,e),oa=(a,t,e,n)=>(F(a,t)?n?.(na(a,t)):ia(a,t,e()),na(a,t)),ra=(a,t,e,n,s=0)=>c((e?oa:na)(a,t[s],s>u(t)-2?e:ea),(i=>{if(s>u(t)-2)return n?.(i)&&ia(a,t[s]),i;const o=ra(i,t,e,n,s+1);return U(i)&&ia(a,t[s]),o})),ca=a=>new Set(w(a)||r(a)?a:[a]),la=(a,t)=>a?.add(t),wa=/^\d+$/,ya=ea(),ua=ea(),da=(a,t,n,s,i,o,l,y={},d=0,E=[])=>{let g,A,h,$=0,f=0,O=0;oa(ya,E,(()=>0)),oa(ua,E,(()=>[]));const S=ea(),[C,T,I,L,b]=((a=1,t,e)=>1!=a&&t.isMergeable()?[1,t.getMergeableContent,()=>t.getTransactionMergeableChanges(!e),([[a],[t]])=>!Z(a)||!Z(t),t.setDefaultContent]:2!=a?[0,t.getContent,t.getTransactionChanges,([a,t])=>!Z(a)||!Z(t),t.setContent]:p("Store type not supported by this Persister"))(l,a,d),[D,R,M]=(()=>{let a;const[t,n]=(()=>{const a=[];let t=0;return[n=>(n?N(a):null)??e+t++,t=>{wa.test(t)&&u(a)<1e3&&m(a,t)}]})(),s=ea();return[(n,i,o,r=[],c=()=>[])=>{a??=z;const l=t(1);return ia(s,l,[n,i,o,r,c]),la(ra(i,o??[e],ca),l),l},(t,n,...i)=>v(((a,t=[e])=>{const n=[],s=(a,e)=>e==u(t)?m(n,a):null===t[e]?x(a,(a=>s(a,e+1))):v([t[e],null],(t=>s(na(a,t),e+1)));return s(a,0),n})(t,n),(t=>x(t,(t=>na(s,t)[0](a,...n??[],...i))))),a=>c(na(s,a),(([,t,i])=>(ra(t,i??[e],void 0,(t=>(B(t,a),U(t)?1:0))),ia(s,a),n(a),i))),t=>c(na(s,t),(([t,,e=[],n,s])=>{const i=(...o)=>{const c=u(o);c==u(e)?t(a,...o,...s(o)):r(e[c])?v(n[c]?.(...o)??[],(a=>i(...o,a))):i(...o,e[c])};i()}))]})(),_=a=>{a!=$&&($=a,R(S,void 0,$))},P=t=>{(C&&w(t?.[0])?1===t?.[2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},F=async a=>(2!=$&&(_(1),f++,await k((async()=>{try{const e=await t();w(e)?P(e):a?b(a):p("Content is not an array: "+e)}catch(t){o?.(t),a&&b(a)}_(0)}))),z),j=()=>(A&&(i(A),A=void 0),z),J=async a=>(1!=$&&(_(2),O++,await k((async()=>{try{await n(T,a)}catch(a){o?.(a)}_(0)}))),z),Y=()=>(h&&(a.delListener(h),h=void 0),z),k=async(...a)=>(m(na(ua,E),...a),await(async()=>{if(!na(ya,E)){for(ia(ya,E,1);!r(g=N(na(ua,E)));)try{await g()}catch(a){o?.(a)}ia(ya,E,0)}})(),z),z={load:F,startAutoLoad:async a=>{j(),await F(a);try{A=await s((async(a,t)=>{t||a?2!=$&&(_(1),f++,P(t??a),_(0)):await F()}))}catch(a){o?.(a)}return z},stopAutoLoad:j,isAutoLoading:()=>!r(A),save:J,startAutoSave:async()=>(Y(),await J(),h=a.addDidFinishTransactionListener((()=>{const a=I();L(a)&&J(a)})),z),stopAutoSave:Y,isAutoSaving:()=>!r(h),getStatus:()=>$,addStatusListener:a=>D(a,S),delListener:t=>(M(t),a),schedule:k,getStore:()=>a,destroy:()=>(na(ua,E).splice(0,void 0),j().stopAutoSave()),getStats:()=>({loads:f,saves:O}),...y};return G(z)},pa=(a,t,e,s,i,o=va,c,l)=>{const w=ea();return[async()=>{w.clear(),g(await e(a,t),(({tn:a,cn:t})=>la(oa(w,a,ca),t)))},async(t,e)=>((a,t)=>F(na(w,a),t))(t,e)?H(h(g(await a(L+_(t)),(a=>[a[e],l?W(Q(a,e),l):Q(a,e)])),(([a,t])=>!r(a)&&!Z(t)))):{},async(t,e,s,l,y,u=!1)=>{const p=ca();W(s??{},(a=>g(z(a??{}),(a=>la(p,a)))));const v=j(p);if(!u&&y&&A(v)&&F(w,t))return await a("DROP "+C+_(t)),void ia(w,t);const N=na(w,t),$=ca(j(N));if(A(v)||(F(w,t)?await d(g([e,...v],(async(n,s)=>{B($,n)||(await a(T+_(t)+"ADD"+_(n)+i),0==s&&await a("CREATE UNIQUE INDEX pk ON "+_(t)+`(${_(e)})`),la(N,n))}))):(await a("CREATE "+C+_(t)+`(${_(e)}${i} PRIMARY KEY${E(g(v,(a=>n+_(a)+i)))});`),ia(w,t,ca([e,...v])))),await d([...!u&&l?g(j($),(async n=>{n!=e&&(await a(T+_(t)+"DROP"+_(n)),B(N,n))})):[]]),u)r(s)?await a(I+_(t)+S+" true"):await d(V(s,(async(n,s)=>{r(n)?await a(I+_(t)+S+_(e)+"=$1",[s]):A(v)||await o(a,t,e,z(n),{[s]:c?g(X(n),c):X(n)},N)})));else if(A(v))F(w,t)&&await a(I+_(t)+S+" true");else{const n=h(j(na(w,t)),(a=>a!=e)),i={},r=[];W(s??{},((a,t)=>{i[t]=g(n,(t=>c?c(a?.[t]):a?.[t])),m(r,t)})),await o(a,t,e,n,i),await a(I+_(t)+S+_(e)+`NOT IN(${P(r)})`,r)}},async t=>{let e;await a("BEGIN");try{e=await t()}catch(a){s?.(a)}return await a("END"),e}]},va=async(a,t,e,s,i)=>{const o=[1];await a("INSERT INTO"+_(t)+"("+((...a)=>E(g(a,_),n))(e,...s)+")VALUES"+E(V(i,(a=>"($"+o[0]+++","+P(a,o)+")")),n)+"ON CONFLICT("+_(e)+")DO UPDATE SET"+E(g(s,(a=>_(a)+"=excluded."+_(a))),n),V(i,((a,t)=>[t,...g(a,(a=>a??null))])).flat())},Ea=(a,t,e,n,s,i,o,[r,c,l],w,y,u,d,p,v)=>{const[E,g,A,h]=pa(t,w,y,s,p,v),m=da(a,(async()=>await h((async()=>{return await E(),a=(await g(r,c))[$]?.[l]??"null",ta(a,((a,t)=>"￼"===t?void 0:t));var a}))),(async a=>await h((async()=>{var t;await E(),await A(r,c,{[$]:{[l]:(t=a()??null,aa(t,((a,t)=>void 0===t?"￼":t)))}},!0,!0)}))),e,n,s,o,{[d]:()=>u,destroy:()=>(m.stopAutoLoad().stopAutoSave(),i(),m)},0,u);return m},ga=(a,t,e,n,s,i,o,[c,l,[w,y,u]],p,v,E,g,A,m,N,O)=>{const[S,C,T,I]=pa(t,p,v,s,A,m,N,O),L=async(a,t)=>await d(sa(l,(async([e,n,s,i],o)=>{t&&!(o in a)||await T(e,n,a[o],s,i,t)}))),b=async(a,t)=>y?await T(u,f,{[$]:a},!0,!0,t):null,D=da(a,(async()=>await I((async()=>{await S();const a=await(async()=>H(h(await d(sa(c,(async([a,t],e)=>[a,await C(e,t)]))),(a=>!Z(a[1])))))(),t=await(async()=>w?(await C(u,f))[$]:{})();return Z(a)&&r(t)?void 0:[a,t]}))),(async(a,t)=>await I((async()=>{if(await S(),r(t)){const[t,e]=a();await L(t),await b(e)}else await L(t[0],!0),await b(t[1],!0)}))),e,n,s,o,{[g]:()=>E,destroy:()=>(D.stopAutoLoad().stopAutoSave(),i(),D)},0,E);return D},Aa="ColumnName",ha="store",ma="json",Na=ha+"TableName",$a=ha+"Id"+Aa,fa=ha+Aa,Oa="autoLoadIntervalSeconds",Sa="rowId"+Aa,Ca="tableId",Ta="tableName",Ia="deleteEmptyColumns",La="deleteEmptyTable",ba={mode:ma,[Oa]:1},Da={load:0,save:0,[Ta]:t+"_values"},Ra=(a,t,e,n,s)=>{const i=ea();return W(a,((a,o)=>{const c=y(X(K(t,l(a)?{[e]:a}:a)),0,q(t));r(c[0])||n(o,c[0])||(s(o,c[0]),ia(i,o,c))})),i},Ma=(a,n,s,i,r,c,w,u,d,p,v="getDb",E)=>{let g,A,h;const m=((a,t)=>t?async(e,n)=>(t(e,n),await a(e,n)):a)(s,c),[N,$,C,T]=(a=>{const e=(a=>K(ba,l(a)?{[Na]:a}:a??{}))(a),n=e[Oa];if(e.mode==ma){const a=e[Na]??t;return[1,n,[a,e[$a]??f,e[fa]??ha],ca(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=e,r=y(X(K(Da,o)),0,q(Da)),c=r[2],w=ca(c),u=ca(c);return[0,n,[Ra(s,{[Ca]:null,[Sa]:f},Ca,(a=>F(u,a)),(a=>la(w,a))),Ra(i,{[Ta]:null,[Sa]:f,[Ia]:0,[La]:0},Ta,((a,t)=>F(u,t)),((a,t)=>la(w,t))),r],w]})(n);return(N?Ea:ga)(a,m,(a=>{let t;const e=()=>t=setInterval((async()=>{try{const[{d:t,s:e,c:n}]=await m(`${O} ${D} d,${R} s,TOTAL_CHANGES() c FROM ${b}${D} JOIN ${b}${R}`);t==g&&e==A&&n==h||(null!=g&&a(),g=t,A=e,h=n)}catch{}}),1e3*$),n=()=>{g=A=h=null,o(t)},s=i((t=>{T.has(t)&&(n(),a(),e())}));return e(),()=>{n(),r(s)}}),(a=>a()),w,u,d,C,j(T),(async(a,t)=>await a(`${O} t.name tn,c.name cn FROM ${M}list()t,${M}info(t.name)c ${S} t.schema='main'AND t.type IN('table','view')AND t.name IN(${P(t)})ORDER BY t.name,c.name`,t)),p,v,e,E,(a=>!0===a?1:!1===a?0:a),void 0)},_a=(a,t,e,n,s)=>Ma(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,n)=>a(n)))),(a=>a()),n,s,(()=>0),1,t);export{_a as createCrSqliteWasmPersister};
