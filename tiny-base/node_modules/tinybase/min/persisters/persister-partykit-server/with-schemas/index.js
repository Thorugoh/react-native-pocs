const a=a=>typeof a,t=a(""),e="t",s=(a,t)=>a.startsWith(t),n=Promise,i=a=>null==a,r=(a,t,e)=>i(a)?e?.():t(a),c=(a,t,e)=>a.slice(t,e),o=a=>a.length,l=async a=>n.all(a),w=(a,t)=>a.map(t),y=(a,...t)=>a.push(...t),g=Object,h=g.entries,f=(a=[])=>g.fromEntries(a),u=(a,t)=>w(h(a),(([a,e])=>t(e,a))),p=(a,t,e)=>(((a,t)=>t in a)(a,t)||(a[t]=e()),a[t]),S=JSON.stringify,d=JSON.parse,P=a=>S(a,((a,t)=>t instanceof Map?g.fromEntries([...t]):t)),m=(e,s,n)=>e+s+(a(n)==t?n:P(n)),x=(a,t,e)=>{const n=o(a);return s(t,a)?[t[n],(e?d:String)(c(t,n+1))]:void 0},D=(a,t)=>((a,t)=>a?.forEach(t))(a,((a,e)=>t(e,a))),R="hasStore",b=f(w(["Origin","Methods","Headers"],(a=>["Access-Control-Allow-"+a,"*"]))),C=async(a,t="")=>!!await a.get(t+R),T=async(a,t="")=>{const s={},n={};return D(await a.list(),((a,i)=>r(x(t,a),(([a,t])=>{if(a==e){const[a,e,n]=d("["+t+"]");p(p(s,a,f),e,f)[n]=i}else"v"==a&&(n[t]=i)})))),[s,n]},v=async(a,t,e)=>a.party.broadcast(m(a.config.messagePrefix,"s",t),e),O=async(a,t,n,r)=>{const c=a.party.storage,w=a.config.storagePrefix,g={[w+R]:1},h=[],f=[];await l(u(t[0],(async(t,s)=>i(t)?!n&&await a.canDelTable(s,r)&&((a,...t)=>a.unshift(...t))(f,V(w,e,s)):await a.canSetTable(s,n,r)&&await l(u(t,(async(t,o)=>i(t)?!n&&await a.canDelRow(s,o,r)&&y(f,V(w,e,s,o)):await a.canSetRow(s,o,n,r)&&await l(u(t,(async(t,l)=>{const f=[s,o,l],u=V(w,e,...f);i(t)?!n&&await a.canDelCell(...f,r)&&y(h,u):await a.canSetCell(...f,t,n,r,await c.get(u))&&(g[u]=t)}))))))))),await l(u(t[1],(async(t,e)=>{const s=w+"v"+e;i(t)?!n&&await a.canDelValue(e,r)&&y(h,s):await a.canSetValue(e,t,n,r,await c.get(s))&&(g[s]=t)}))),0!=o(f)&&D(await c.list(),(a=>f.every((t=>!s(a,t)||y(h,a)&&0)))),await c.delete(h),await c.put(g)},V=(a,t,...e)=>m(a,t,c(P(e),1,-1)),E=async(a,t,e=null)=>new Response(e,{status:t,headers:a.config.responseHeaders});class H{constructor(a){this.party=a,this.config.storePath??="/store",this.config.messagePrefix??="",this.config.storagePrefix??="",this.config.responseHeaders??=b}config={};async onRequest(a){const{party:{storage:t},config:{storePath:e,storagePrefix:s}}=this;if(new URL(a.url).pathname.endsWith(e)){const e=await C(t,s),n=await a.text();return"PUT"==a.method?e?E(this,205):(await O(this,d(n),!0,a),E(this,201)):E(this,200,e?P(await T(t,s)):"")}return E(this,404)}async onMessage(a,t){const{config:{messagePrefix:e,storagePrefix:s}}=this;await r(x(e,a,1),(async([a,e])=>{"s"==a&&await C(this.party.storage,s)&&(await O(this,e,!1,t),v(this,e,[t.id]))}))}async canSetTable(a,t,e){return!0}async canDelTable(a,t){return!0}async canSetRow(a,t,e,s){return!0}async canDelRow(a,t,e){return!0}async canSetCell(a,t,e,s,n,i,r){return!0}async canDelCell(a,t,e,s){return!0}async canSetValue(a,t,e,s,n){return!0}async canDelValue(a,t){return!0}}export{H as TinyBasePartyKitServer,v as broadcastChanges,C as hasStoreInStorage,T as loadStoreFromStorage};
