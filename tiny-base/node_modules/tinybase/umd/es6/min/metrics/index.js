var e,n;e=this,n=function(e){"use strict";const n=e=>typeof e,t="",l=n(t),r=n(n),i=Math,o=i.max,s=i.min,u=isFinite,d=e=>null==e,a=(e,n,t)=>d(e)?null==t?void 0:t():n(e),c=e=>Array.isArray(e),v=e=>e.length,f=()=>{},h=(e,n)=>e.forEach(n),g=e=>M(e,((e,n)=>e+n),0),M=(e,n,t)=>e.reduce(n,t),p=(e,...n)=>e.push(...n),y=Object.freeze,m=e=>{var n;return null!=(n=null==e?void 0:e.size)?n:0},L=(b=m,e=>M(x(e),((e,n)=>e+b(n)),0));var b;const w=(e,n)=>{var t;return null!=(t=null==e?void 0:e.has(n))&&t},T=e=>d(e)||0==m(e),x=e=>{var n;return[...null!=(n=null==e?void 0:e.values())?n:[]]},I=e=>e.clear(),E=(e,n)=>null==e?void 0:e.forEach(n),R=(e,n)=>null==e?void 0:e.delete(n),S=e=>new Map(e),j=(e,n)=>null==e?void 0:e.get(n),k=(e,n)=>E(e,((e,t)=>n(t,e))),z=(e,n,t)=>d(t)?(R(e,n),e):null==e?void 0:e.set(n,t),A=(e,n,t,l)=>(w(e,n)?null==l||l(j(e,n)):z(e,n,t()),j(e,n)),D=(e,n,t,l,r=0)=>a((t?A:j)(e,n[r],r>v(n)-2?t:S),(i=>{if(r>v(n)-2)return(null==l?void 0:l(i))&&z(e,n[r]),i;const o=D(i,n,t,l,r+1);return T(i)&&z(e,n[r]),o})),N=S([["avg",[(e,n)=>g(e)/n,(e,n,t)=>e+(n-e)/(t+1),(e,n,t)=>e+(e-n)/(t-1),(e,n,t,l)=>e+(n-t)/l]],["max",[e=>o(...e),(e,n)=>o(n,e),(e,n)=>n==e?void 0:e,(e,n,t)=>t==e?void 0:o(n,e)]],["min",[e=>s(...e),(e,n)=>s(n,e),(e,n)=>n==e?void 0:e,(e,n,t)=>t==e?void 0:s(n,e)]],["sum",[e=>g(e),(e,n)=>e+n,(e,n)=>e-n,(e,n,t)=>e-t+n]]]),B=e=>new Set(c(e)||d(e)?e:[e]),C=(e,n)=>null==e?void 0:e.add(n),F=/^\d+$/,O=(()=>{const e=new WeakMap;return i=>(e.has(i)||e.set(i,(e=>{const i=S(),[o,s,g]=(()=>{let e;const[n,l]=(()=>{const e=[];let n=0;return[l=>{var r;return null!=(r=l?e.shift():null)?r:t+n++},n=>{F.test(n)&&v(e)<1e3&&p(e,n)}]})(),r=S();return[(l,i,o,s=[],u=()=>[])=>{null!=e||(e=Q);const d=n(1);return z(r,d,[l,i,o,s,u]),C(D(i,null!=o?o:[t],B),d),d},(n,l,...i)=>h(((e,n=[t])=>{const l=[],r=(e,t)=>t==v(n)?p(l,e):null===n[t]?E(e,(e=>r(e,t+1))):h([n[t],null],(n=>r(j(e,n),t+1)));return r(e,0),l})(n,l),(n=>E(n,(n=>j(r,n)[0](e,...null!=l?l:[],...i))))),e=>a(j(r,e),(([,n,i])=>(D(n,null!=i?i:[t],void 0,(n=>(R(n,e),T(n)?1:0))),z(r,e),l(e),i))),n=>a(j(r,n),(([n,,t=[],l,r])=>{const i=(...o)=>{var s,u;const a=v(o);a==v(t)?n(e,...o,...r(o)):d(t[a])?h(null!=(u=null==(s=l[a])?void 0:s.call(l,...o))?u:[],(e=>i(...o,e))):i(...o,t[a])};i()}))]})(),[M,b,O,W,$,q,G,,H,J,K,P]=((e,n,l,r,i)=>{const o=e.hasRow,s=S(),u=S(),f=S(),g=S(),M=S(),p=S(),y=(n,t,...l)=>{const r=A(p,n,B);return h(l,(n=>C(r,n)&&t&&e.callListener(n))),l},m=(n,...t)=>a(j(p,n),(l=>{h(0==v(t)?x(l):t,(n=>{e.delListener(n),R(l,n)})),T(l)&&z(p,n)})),L=(e,t)=>{z(s,e,t),w(u,e)||(z(u,e,n()),z(g,e,S()),z(M,e,S()),i(f))},b=e=>{z(s,e),z(u,e),z(g,e),z(M,e),m(e),i(f)};return[()=>e,()=>{return[...null!=(n=null==(e=s)?void 0:e.keys())?n:[]];var e,n},e=>k(u,e),e=>w(u,e),e=>j(s,e),e=>j(u,e),(e,n)=>z(u,e,n),L,(n,l,r,i,s)=>{L(n,l);const u=S(),a=S(),f=j(g,n),p=j(M,n),b=n=>{const r=t=>e.getCell(l,n,t),h=j(f,n),g=o(l,n)?(M=i(r,n),isNaN(M)||d(M)||!0===M||!1===M||M===t?void 0:1*M):void 0;var M,y,m,L;if(h===g||c(h)&&c(g)&&(m=g,v(y=h)===v(m)&&(L=(e,n)=>m[n]===e,y.every(L)))||z(u,n,[h,g]),!d(s)){const e=j(p,n),t=o(l,n)?s(r,n):void 0;e!=t&&z(a,n,t)}},T=e=>{r((()=>{E(u,(([,e],n)=>z(f,n,e))),E(a,((e,n)=>z(p,n,e)))}),u,a,f,p,e),I(u),I(a)};k(f,b),e.hasTable(l)&&h(e.getRowIds(l),(e=>{w(f,e)||b(e)})),T(!0),m(n),y(n,0,e.addRowListener(l,null,((e,n,t)=>b(t))),e.addTableListener(l,(()=>T())))},b,e=>r(e,f),()=>k(p,b),y,m]})(e,f,0,o,s),Q={setMetricDefinition:(e,t,o,a,c,v,f)=>{var h;const g=n(o)==r?[o,c,v,f]:null!=(h=j(N,o))?h:j(N,"sum");return H(e,t,((n,t,l,r,o,a)=>{const c=q(e),v=m(r);a||(a=d(c)),n();let f=((e,n,t,l,r,i=!1)=>{if(T(t))return;const[o,s,u,a]=r;return i||(i=d(e)),E(l,(([t,l])=>{i||(e=d(t)?null==s?void 0:s(e,l,n++):d(l)?null==u?void 0:u(e,t,n--):null==a?void 0:a(e,l,t,n),i||(i=d(e)))})),i?o(x(t),m(t)):e})(c,v,r,t,g,a);u(f)||(f=void 0),f!=c&&(G(e,f),s(i,[e],f,c))}),n(M=a)==l?e=>e(M):null!=M?M:()=>1),Q;var M},delMetricDefinition:e=>(J(e),Q),getStore:M,getMetricIds:b,forEachMetric:O,hasMetric:W,getTableId:$,getMetric:q,addMetricIdsListener:K,addMetricListener:(e,n)=>o(n,i,[e]),delListener:e=>(g(e),Q),destroy:P,getListenerStats:()=>({metric:L(i)})};return y(Q)})(i)),e.get(i))})();e.createMetrics=O},"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).TinyBaseMetrics={});
