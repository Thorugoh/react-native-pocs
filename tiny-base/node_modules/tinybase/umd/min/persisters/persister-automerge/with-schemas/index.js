var t,e;t=this,e=function(t){"use strict";const e=t=>null==t,n=(t,n,a)=>e(t)?a?.():n(t),a=t=>Array.isArray(t),s=t=>t.length,o=t=>{throw Error(t)},r=(t,e)=>t.forEach(e),i=(t,...e)=>t.push(...e),c=t=>t.shift(),d=Object,u=t=>d.getPrototypeOf(t),l=d.entries,y=d.keys,g=d.freeze,h=(t=[])=>d.fromEntries(t),f=(t,e)=>n(t,(t=>t[e])),p=(t,e)=>e in t,v=(t,e)=>(delete t[e],t),w=(t,e)=>h(((t,e)=>((t,e)=>t.map(e))(l(t),(([t,n])=>e(n,t))))(t,((t,n)=>[n,e(t,n)]))),b=t=>s(y(t)),A=t=>(t=>!e(t)&&n(u(t),(t=>t==d.prototype||e(u(t))),(()=>!0)))(t)&&0==b(t),C=(t,e,n)=>(p(t,e)||(t[e]=n()),t[e]),S=t=>e(t)||0==(t=>t?.size??0)(t),L=(t,e)=>t?.forEach(e),m=(t,e)=>t?.delete(e),M=t=>new Map(t),T=(t,e)=>t?.get(e),E=(t,n,a)=>e(a)?(m(t,n),t):t?.set(n,a),P=(t,e,n,a)=>{var s,o;return s=t,o=e,s?.has(o)?a?.(T(t,e)):E(t,e,n()),T(t,e)},x=(t,e,a,o,r=0)=>n((a?P:T)(t,e[r],r>s(e)-2?a:M),(n=>{if(r>s(e)-2)return o?.(n)&&E(t,e[r]),n;const i=x(n,e,a,o,r+1);return S(n)&&E(t,e[r]),i})),D=t=>new Set(a(t)||e(t)?t:[t]),j=/^\d+$/,z=M(),O=M(),k=(t,d,u,l,y,h,f,p={},v=0,w=[])=>{let b,C,k,B=0,F=0,H=0;P(z,w,(()=>0)),P(O,w,(()=>[]));const $=M(),[q,G,I,J,K]=((t=1,e,n)=>1!=t&&e.isMergeable()?[1,e.getMergeableContent,()=>e.getTransactionMergeableChanges(!n),([[t],[e]])=>!A(t)||!A(e),e.setDefaultContent]:2!=t?[0,e.getContent,e.getTransactionChanges,([t,e])=>!A(t)||!A(e),e.setContent]:o("Store type not supported by this Persister"))(f,t,v),[N,Q,R]=(()=>{let t;const[a,o]=(()=>{const t=[];let e=0;return[n=>(n?c(t):null)??""+e++,e=>{j.test(e)&&s(t)<1e3&&i(t,e)}]})(),d=M();return[(e,n,s,o=[],r=()=>[])=>{t??=tt;const i=a(1);var c,u;return E(d,i,[e,n,s,o,r]),c=x(n,s??[""],D),u=i,c?.add(u),i},(e,n,...a)=>r(((t,e=[""])=>{const n=[],a=(t,o)=>o==s(e)?i(n,t):null===e[o]?L(t,(t=>a(t,o+1))):r([e[o],null],(e=>a(T(t,e),o+1)));return a(t,0),n})(e,n),(e=>L(e,(e=>T(d,e)[0](t,...n??[],...a))))),t=>n(T(d,t),(([,e,n])=>(x(e,n??[""],void 0,(e=>(m(e,t),S(e)?1:0))),E(d,t),o(t),n))),a=>n(T(d,a),(([n,,a=[],o,i])=>{const c=(...d)=>{const u=s(d);u==s(a)?n(t,...d,...i(d)):e(a[u])?r(o[u]?.(...d)??[],(t=>c(...d,t))):c(...d,a[u])};c()}))]})(),U=t=>{t!=B&&(B=t,Q($,void 0,B))},V=e=>{(q&&a(e?.[0])?1===e?.[2]?t.applyMergeableChanges:t.setMergeableContent:1===e?.[2]?t.applyChanges:t.setContent)(e)},W=async t=>(2!=B&&(U(1),F++,await _((async()=>{try{const e=await d();a(e)?V(e):t?K(t):o("Content is not an array: "+e)}catch(e){h?.(e),t&&K(t)}U(0)}))),tt),X=()=>(C&&(y(C),C=void 0),tt),Y=async t=>(1!=B&&(U(2),H++,await _((async()=>{try{await u(G,t)}catch(t){h?.(t)}U(0)}))),tt),Z=()=>(k&&(t.delListener(k),k=void 0),tt),_=async(...t)=>(i(T(O,w),...t),await(async()=>{if(!T(z,w)){for(E(z,w,1);!e(b=c(T(O,w)));)try{await b()}catch(t){h?.(t)}E(z,w,0)}})(),tt),tt={load:W,startAutoLoad:async t=>{X(),await W(t);try{C=await l((async(t,e)=>{e||t?2!=B&&(U(1),F++,V(e??t),U(0)):await W()}))}catch(t){h?.(t)}return tt},stopAutoLoad:X,isAutoLoading:()=>!e(C),save:Y,startAutoSave:async()=>(Z(),await Y(),k=t.addDidFinishTransactionListener((()=>{const t=I();J(t)&&Y(t)})),tt),stopAutoSave:Z,isAutoSaving:()=>!e(k),getStatus:()=>B,addStatusListener:t=>N(t,$),delListener:e=>(R(e),t),schedule:_,getStore:()=>t,destroy:()=>(T(O,w).splice(0,void 0),X().stopAutoSave()),getStats:()=>({loads:F,saves:H}),...p};return g(tt)},B=(t,e)=>[t[e].t,t[e].v],F=(t,n,a,s)=>{const o=e(n)?t:C(t,n,(()=>({})));let r;return w(a,((t,e)=>{s(o,e,t)&&(r=1)})),w(o,((t,e)=>{p(a,e)||(v(o,e),r=1)})),!e(n)&&A(o)&&v(t,n),r};t.createAutomergePersister=(t,a,s="tinybase",o)=>(a.change((t=>C(t,s,h))),k(t,(async()=>{const t=await a.doc();return 2==b(t?.[s])?B(t,s):void 0}),(async(t,o)=>a.change((a=>((t,a,s,o)=>{((t,e)=>{A(t[e])&&(t[e]={t:{},v:{}})})(t,a);const[r,i]=B(t,a),c=()=>{d=1};let d=1;if(n(o,(([t,a])=>{d=0,w(t,((t,a)=>d?0:e(t)?v(r,a):n(r[a],(a=>w(t,((t,s)=>d?0:e(t)?v(a,s):n(f(a,s),(n=>w(t,((t,a)=>e(t)?v(n,a):n[a]=t))),c)))),c))),w(a,((t,n)=>d?0:e(t)?v(i,n):i[n]=t))})),d){const[t,e]=s();F(r,void 0,t,((t,e,n)=>F(r,e,n,((t,e,n)=>F(t,e,n,((t,e,n)=>{if(f(t,e)!==n)return t[e]=n,1})))))),F(i,void 0,e,((t,e,n)=>{f(i,e)!==n&&(i[e]=n)}))}})(a,s,t,o)))),(t=>{const e=({doc:e})=>t(B(e,s));return a.on("change",e),e}),(t=>{a.removeListener("change",t)}),o,1,{getDocHandle:()=>a}))},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterAutomerge={});
